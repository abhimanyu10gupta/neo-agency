{
	"info": {
		"_postman_id": "ede629c3-8554-4f93-8d3c-e36bd9a918c7",
		"name": "Neo-Agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{executive_producer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Jumanji\",\n    \"releaseDate\": \"2017\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bill\",\n    \"age\": \"26\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"2\"    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Titanic\",\n    \"releaseDate\": \"2010\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Keanu Reaves\",\n    \"age\": \"50\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/3/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/actor/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actor",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImV3V0kxTHlCd055Z2t3MFZESmpOdiJ9.eyJpc3MiOiJodHRwczovL2Z1bGxzdGFjay11ZGFjaXR5LmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MzgyMGMzNjVmNDI4ZmEwMjlmYTlmMjciLCJhdWQiOlsiYWdlbmN5IiwiaHR0cHM6Ly9mdWxsc3RhY2stdWRhY2l0eS5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNjcwODI3OTI5LCJleHAiOjE2NzA5MTQzMjksImF6cCI6IlVJSlIzUUxUdURKaU9iTXJTN2RYNjZPSHRGb2RjNEJGIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvciIsImRlbGV0ZTptb3ZpZSIsImdldDphY3Rvci1kZXRhaWxzIiwiZ2V0Om1vdmllLWRldGFpbHMiLCJwYXRjaDphY3RvciIsInBhdGNoOm1vdmllIiwicG9zdDphY3RvcnMiLCJwb3N0Om1vdmllIl19.bA85vDVAXeEaPHoRYB5Fb6bkUs9iuhCvFPKK5cADDukOBeREq_P-Zui4aRcJcQFo1g6WPc_Na4tl6OwNt1lCLMGt2CmsUtjG9Qlxqr6aEsO_4rGkyT2y-jYyWy1TDhYryDoyDquIC3YJdOelmTwbGsG5NTFwcvn58pa9TpnPfTWz1KZO9rwL2rz3X1IYxCYFhDewlQOsYyVcCuHMV5M0_G1H2xmGyoME1oqaacLmZe2V-goY6uIavdfu7wY-zWINAQwj4bVGuvvL2q_mGy06hx5S-4QXRTiL_l49dhAupsHIymFNl4i6TQdIuf76gXX0HzfgduwvHzwzY2-vA9GroA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting AGent",
			"item": [
				{
					"name": "get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Jumanji\",\n    \"releaseDate\": \"2017\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bill\",\n    \"age\": \"26\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"2\"    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/actors/6",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actors",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Keanu Reaves\",\n    \"age\": \"50\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/5/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"5",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Fight club\",\n    \"releaseDate\": \"2010\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{casting_agent_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Jumanji\",\n    \"releaseDate\": \"2017\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bill\",\n    \"age\": \"26\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"2\"    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/actor/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"actor",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no agents are unauthorised\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Pirsuit of Happiness\",\n    \"releaseDate\": \"2010\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Keanu Reaves\",\n    \"age\": \"50\",\n    \"gender\": \"Male\",\n    \"movie_id\": \"3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/movies/2/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"movies",
								"2",
								"actors"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{casting_director_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "default"
		},
		{
			"key": "executive_producer_token",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImV3V0kxTHlCd055Z2t3MFZESmpOdiJ9.eyJpc3MiOiJodHRwczovL2Z1bGxzdGFjay11ZGFjaXR5LmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MzgyMGMzNjVmNDI4ZmEwMjlmYTlmMjciLCJhdWQiOlsiYWdlbmN5IiwiaHR0cHM6Ly9mdWxsc3RhY2stdWRhY2l0eS5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNjcwODI3OTI5LCJleHAiOjE2NzA5MTQzMjksImF6cCI6IlVJSlIzUUxUdURKaU9iTXJTN2RYNjZPSHRGb2RjNEJGIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvciIsImRlbGV0ZTptb3ZpZSIsImdldDphY3Rvci1kZXRhaWxzIiwiZ2V0Om1vdmllLWRldGFpbHMiLCJwYXRjaDphY3RvciIsInBhdGNoOm1vdmllIiwicG9zdDphY3RvcnMiLCJwb3N0Om1vdmllIl19.bA85vDVAXeEaPHoRYB5Fb6bkUs9iuhCvFPKK5cADDukOBeREq_P-Zui4aRcJcQFo1g6WPc_Na4tl6OwNt1lCLMGt2CmsUtjG9Qlxqr6aEsO_4rGkyT2y-jYyWy1TDhYryDoyDquIC3YJdOelmTwbGsG5NTFwcvn58pa9TpnPfTWz1KZO9rwL2rz3X1IYxCYFhDewlQOsYyVcCuHMV5M0_G1H2xmGyoME1oqaacLmZe2V-goY6uIavdfu7wY-zWINAQwj4bVGuvvL2q_mGy06hx5S-4QXRTiL_l49dhAupsHIymFNl4i6TQdIuf76gXX0HzfgduwvHzwzY2-vA9GroA",
			"type": "default"
		}
	]
}